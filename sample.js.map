{"version":3,"sources":["webpack://revitalace-js/./src/sample/user.js"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,4BAA4B,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,eAAe,0BAA0B,6BAA6B;AACtE;AACA,KAAK;AACL,KAAK,gCAAgC,sCAAsC,4BAA4B,6BAA6B;AACpI,GAAG;AACH;AACA;AACA,gBAAgB,0BAA0B,6BAA6B,4BAA4B,uBAAuB;AAC1H,MAAM,2BAA2B,sCAAsC,4BAA4B,wBAAwB;AAC3H,IAAI;AACJ;AACA,CAAC;;AAED;AACA;AACA;AACA,IAAI;;;AAGJ;;;AAGA;AACA;AACA","file":"sample.js","sourcesContent":["/**\r\n * This is a sample file that demonstrates API usage. Open index.html in the bundle to see the below changes in\r\n * action.\r\n * @author Nishanth\r\n */\r\n\r\n/*\r\n * initialize ace.\r\n */\r\nvar editor = ace.edit(\"testedit\", {\r\n\tmode: \"ace/mode/javascript\"\r\n});\r\n\r\n/*\r\n * Sample tern definition\r\n * @type {{\"!name\": string, MyObject: {greet: {\"!type\": string, \"!url\": string, \"!doc\": string}}}}\r\n */\r\nlet def = {\r\n\t\"!name\" : \"MyDefinition\",\r\n\t\"MyObject\" : {\r\n\t\t\"greet\" : {\r\n\t\t\t\"!type\" : \"fn(arg:string)->string\",\r\n\t\t\t\"!url\": \"https://foobar.foo/greet\",\r\n\t\t\t\"!doc\": \"Returns a greeting in English for the passed First Name.\"\r\n\t\t}\r\n\t}\r\n};\r\n\r\nlet defObject = {\r\n\tdefJSON : def,\r\n\tatFront : true\r\n};\r\n\r\nlet urlDefObject = {\r\n\turl : \"http://foo.bar/mydefinition.json\",\r\n\ttype: \"url\",\r\n\tatFront: true\r\n};\r\n\r\n// Set editor options example - all options\r\neditor.setOptions({\r\n\trevitalAceJS: {\r\n\t\tdependentCode : \"/**\\n\" +\r\n\t\t\" * This object is part of the dependent code added via 'defs'\\n\" +\r\n\t\t\" */\\n\" +\r\n\t\t\"var dependentObject = {\\n\" +\r\n\t\t\"m : 'JS has -infinity and infinity'\\n\" +\r\n\t\t\"}\",\r\n\t\tdefs : defObject,\r\n\t\t/**\r\n\t\t * This is a function will be called for every completion. Add or remove\r\n\t\t * tern completions in this callback and return.\r\n\t\t *\r\n\t\t * The below params are injected by revitalace.\r\n\t\t * @param editorSession - Ace edit session object\r\n\t\t * @param currentLine - Current line where the completion is triggered\r\n\t\t * @param completions - Array of completions resolved by tern\r\n\t\t * @return completions - Array of completions updated in this callback\r\n\t\t */\r\n\t\t// completionsCallback: (editorSession, currentLine, completions) => {\r\n\t\t// \tconsole.log('Completion Line' + currentLine);\r\n\t\t// \tconsole.log(JSON.stringify(completions));\r\n\t\t// \tcompletions.push(\r\n\t\t// \t\t{    \"name\":\"completionsCallback\",\r\n\t\t// \t\t\t\"value\":\"completionsCallback\",\r\n\t\t// \t\t\t\"meta\":\"completionsCallback\",\r\n\t\t// \t\t\t\"score\":1,\r\n\t\t// \t\t\t\"doc\":\"This custom completion was injected dynamically using the completionsCallback\",\r\n\t\t// \t\t\t\"type\":\"function\",\r\n\t\t// \t\t\t\"url\":\"https://developer.mozilla.org/en/docs/\"\r\n\t\t// \t\t});\r\n\r\n\t\t// \treturn completions;\r\n\t\t// },\r\n\t\t/**\r\n\t\t * This is a function will be called for every tool tip render. modify result and return.\r\n\t\t *\r\n\t\t * In this example, every doc element will be replaced with text 'Where is Waldo' :o)\r\n\t\t *\r\n\t\t * The below params are injected by revitalace.\r\n\t\t * @param editorSession - Ace edit session object\r\n\t\t * @param currentToken - Current token ace object where the completion is triggered\r\n\t\t * @param toolTipInfo - Result object compiled by revitalace\r\n\t\t * @return toolTipInfo - Final result that would be used to render the tooltip\r\n\t\t */\r\n\t\t// tooltipCallBack: (editorSession, currentToken, toolTipInfo) => {\r\n\t\t// \tconsole.log('Tooltip Token' + currentToken.value);\r\n\t\t// \tconsole.log(JSON.stringify(toolTipInfo));\r\n\t\t// \t// Update the doc here.\r\n\t\t// \tconst customizedToolTipInfo = {\r\n\t\t// \t\ttype: \"fn(input: ?)\",\r\n\t\t// \t\tname: \"getTooltipInfo\",\r\n\t\t// \t\tdoc: \"Where is Waldo?\",\r\n\t\t// \t\tdef: toolTipInfo.def,\r\n\t\t// \t\trefs: toolTipInfo.refs\r\n\t\t// \t}\r\n\t\t// \treturn customizedToolTipInfo;\r\n\t\t// },\r\n\t\toptions: {\r\n\t\t\tuseEcmaDefs: true,\r\n\t\t\tuseBrowserDefs: true\r\n\t\t},\r\n\t\tmenu : [{\r\n\t\t\tlabel : \"File\",\r\n\t\t\tsubMenu : [{label: \"Find\", shortCut: {mac : 'Cmd-f', win: 'Ctrl-f'}, trigger: function(editor){\r\n\t\t\t\talert(\"Find clicked in editor with id \"+editor.id);\r\n\t\t\t}},\r\n\t\t\t\t{label: \"Completion\", shortCut: {mac : 'Ctrl-Space', win: 'Ctrl-Space'}, trigger: function(editor){alert(\"Completion clicked\")}}]\r\n\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel : \"Edit\",\r\n\t\t\t\tsubMenu : [{label: \"Copy\", shortCut: {mac : 'Cmd-f', win: 'Ctrl-f'}, trigger: function(editor){alert(\"Copy Clicked\")}},\r\n\t\t\t\t\t{label: \"Paste\", shortCut: {mac : 'Ctrl-Space', win: 'Ctrl-Space'}, trigger: function(editor){alert(\"Paste clicked\")}}]\r\n\t\t\t}]\r\n\t}\r\n});\r\n\r\n// Basic option\r\n// editor.setOptions({\r\n// \trevitalAceJS: true\r\n// });\r\n\r\n\r\n// Sample code in the demo\r\n\r\n\r\neditor.$blockScrolling = Infinity;\r\neditor.getSession().getSelection().clearSelection();\r\neditor.focus();\r\n"],"sourceRoot":""}